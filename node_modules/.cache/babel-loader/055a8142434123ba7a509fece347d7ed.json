{"ast":null,"code":"import _defineProperty from \"E:\\\\WEB_RESOURCE\\\\ReactJS_TodoList\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"E:\\\\WEB_RESOURCE\\\\ReactJS_TodoList\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\WEB_RESOURCE\\\\ReactJS_TodoList\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\WEB_RESOURCE\\\\ReactJS_TodoList\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\WEB_RESOURCE\\\\ReactJS_TodoList\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\WEB_RESOURCE\\\\ReactJS_TodoList\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\WEB_RESOURCE\\\\ReactJS_TodoList\\\\src\\\\components\\\\THSort\\\\index.jsx\";\nimport React, { Component } from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { TextField, InputAdornment, MenuItem } from \"@material-ui/core\";\n\nvar styles = function styles(theme) {\n  return {\n    csfullwidth: {\n      width: '100%'\n    }\n  };\n};\n\nvar THSort =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(THSort, _Component);\n\n  function THSort(props) {\n    var _this;\n\n    _classCallCheck(this, THSort);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(THSort).call(this, props));\n\n    _this.handleChange = function (prop) {\n      return function (event) {\n        _this.setState(_defineProperty({}, prop, event.target.value)); // convert \"A-B\" ==> \"A\" and \"B\"   =split()\n\n\n        var arry = event.target.value.split(\"-\", 2);\n\n        _this.props.onHandleSort(arry[0], arry[1]);\n      };\n    };\n\n    _this.state = {\n      valueRange: \"name-asc\"\n    };\n    return _this;\n  }\n\n  _createClass(THSort, [{\n    key: \"componentWillReceiveProps\",\n    // componentWillUpdate(){\n    //   \n    // }\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        valueRange: \"\".concat(nextProps.orderBy, \"-\").concat(nextProps.order)\n      });\n    } // shouldComponentUpdate(newProps,nexStates) {\n    //   console.log('newProps: ',newProps.value.id);\n    //   console.log('oldProps: ',this.props);\n    //   console.log('nexStates: ',nexStates);\n    //   if(this.props !== newProps){\n    //     this.setState({\n    //       //         value: Object.assign({}, nextProps.value)\n    //       //     });\n    //   }\n    // //   if (this.props.value.id !== nextProps.value.id) {\n    // //     this.setState({\n    // //         value: Object.assign({}, nextProps.value)\n    // //     });\n    // // }\n    //   // if(oldProps.field !== newProps.field) {\n    //   //   this.setState({valueRange:`${newProps.orderBy}-${newProps.order}` });\n    //   // }\n    //   return true;\n    // }\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          classes = _this$props.classes,\n          values = _this$props.values,\n          orderBy = _this$props.orderBy,\n          order = _this$props.order;\n      return React.createElement(TextField, {\n        select: true,\n        className: classes.csfullwidth,\n        variant: \"outlined\",\n        label: \"Sort List\",\n        margin: \"normal\",\n        value: this.state.valueRange,\n        onChange: this.handleChange(\"valueRange\"),\n        InputProps: {\n          startAdornment: React.createElement(InputAdornment, {\n            position: \"start\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, \"Type\")\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, values.map(function (option) {\n        return React.createElement(MenuItem, {\n          key: option.value,\n          value: option.value,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, option.label);\n      }));\n    }\n  }]);\n\n  return THSort;\n}(Component); // THCombobox.propTypes = {\n//   values: PropTypes.object.isRequired,\n// };\n\n\nexport default withStyles(styles)(THSort);","map":{"version":3,"sources":["E:\\WEB_RESOURCE\\ReactJS_TodoList\\src\\components\\THSort\\index.jsx"],"names":["React","Component","withStyles","TextField","InputAdornment","MenuItem","styles","theme","csfullwidth","width","THSort","props","handleChange","prop","event","setState","target","value","arry","split","onHandleSort","state","valueRange","nextProps","orderBy","order","classes","values","startAdornment","map","option","label"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,SAASC,SAAT,EAAoBC,cAApB,EAAoCC,QAApC,QAAoD,mBAApD;;AAGA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK;AAAA,SAAK;AACvBC,IAAAA,WAAW,EAAC;AAACC,MAAAA,KAAK,EAAE;AAAR;AADW,GAAL;AAAA,CAApB;;IAIMC,M;;;;;AACJ,kBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,gFAAMA,KAAN;;AADiB,UAInBC,YAJmB,GAIJ,UAAAC,IAAI;AAAA,aAAI,UAAAC,KAAK,EAAI;AAC9B,cAAKC,QAAL,qBAAiBF,IAAjB,EAAwBC,KAAK,CAACE,MAAN,CAAaC,KAArC,GAD8B,CAE9B;;;AACA,YAAMC,IAAI,GAAEJ,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmBE,KAAnB,CAAyB,GAAzB,EAA6B,CAA7B,CAAZ;;AACA,cAAKR,KAAL,CAAWS,YAAX,CAAwBF,IAAI,CAAC,CAAD,CAA5B,EAAgCA,IAAI,CAAC,CAAD,CAApC;AACD,OALkB;AAAA,KAJA;;AAEjB,UAAKG,KAAL,GAAa;AAAEC,MAAAA,UAAU,EAAE;AAAd,KAAb;AAFiB;AAGlB;;;;AAQD;AACA;AACA;8CAE0BC,S,EAAU;AAClC,WAAKR,QAAL,CAAc;AAACO,QAAAA,UAAU,YAAKC,SAAS,CAACC,OAAf,cAA0BD,SAAS,CAACE,KAApC;AAAX,OAAd;AACD,K,CAED;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;6BAES;AAAA,wBACqC,KAAKd,KAD1C;AAAA,UACEe,OADF,eACEA,OADF;AAAA,UACYC,MADZ,eACYA,MADZ;AAAA,UACoBH,OADpB,eACoBA,OADpB;AAAA,UAC4BC,KAD5B,eAC4BA,KAD5B;AAEP,aACE,oBAAC,SAAD;AACE,QAAA,MAAM,MADR;AAEE,QAAA,SAAS,EAAEC,OAAO,CAAClB,WAFrB;AAGE,QAAA,OAAO,EAAC,UAHV;AAIE,QAAA,KAAK,EAAC,WAJR;AAKE,QAAA,MAAM,EAAC,QALT;AAME,QAAA,KAAK,EAAE,KAAKa,KAAL,CAAWC,UANpB;AAOE,QAAA,QAAQ,EAAE,KAAKV,YAAL,CAAkB,YAAlB,CAPZ;AAQE,QAAA,UAAU,EAAE;AACVgB,UAAAA,cAAc,EAAE,oBAAC,cAAD;AAAgB,YAAA,QAAQ,EAAC,OAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADN,SARd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYGD,MAAM,CAACE,GAAP,CAAW,UAAAC,MAAM;AAAA,eAChB,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,MAAM,CAACb,KAAtB;AAA6B,UAAA,KAAK,EAAEa,MAAM,CAACb,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGa,MAAM,CAACC,KADV,CADgB;AAAA,OAAjB,CAZH,CADF;AAoBD;;;;EA/DkB9B,S,GAiErB;AACA;AACA;;;AACA,eAAeC,UAAU,CAACI,MAAD,CAAV,CAAmBI,MAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport { TextField, InputAdornment, MenuItem } from \"@material-ui/core\";\r\n\r\n\r\nconst styles = theme => ({\r\n  csfullwidth:{width: '100%'}\r\n});\r\n\r\nclass THSort extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { valueRange: \"name-asc\" };\r\n  }\r\n  handleChange = prop => event => {\r\n    this.setState({ [prop]: event.target.value });\r\n    // convert \"A-B\" ==> \"A\" and \"B\"   =split()\r\n    const arry =event.target.value.split(\"-\",2);\r\n    this.props.onHandleSort(arry[0],arry[1]) ;\r\n  };\r\n\r\n  // componentWillUpdate(){\r\n  //   \r\n  // }\r\n\r\n  componentWillReceiveProps(nextProps){\r\n    this.setState({valueRange: `${nextProps.orderBy}-${nextProps.order}`})\r\n  }\r\n\r\n  // shouldComponentUpdate(newProps,nexStates) {\r\n   \r\n  //   console.log('newProps: ',newProps.value.id);\r\n  //   console.log('oldProps: ',this.props);\r\n  //   console.log('nexStates: ',nexStates);\r\n  //   if(this.props !== newProps){\r\n  //     this.setState({\r\n  //       //         value: Object.assign({}, nextProps.value)\r\n  //       //     });\r\n  //   }\r\n  // //   if (this.props.value.id !== nextProps.value.id) {\r\n  // //     this.setState({\r\n  // //         value: Object.assign({}, nextProps.value)\r\n  // //     });\r\n  // // }\r\n  //   // if(oldProps.field !== newProps.field) {\r\n  //   //   this.setState({valueRange:`${newProps.orderBy}-${newProps.order}` });\r\n  //   // }\r\n  //   return true;\r\n  // }\r\n\r\n  render() {\r\n      const {classes , values ,orderBy,order} = this.props;\r\n    return (\r\n      <TextField\r\n        select\r\n        className={classes.csfullwidth}\r\n        variant=\"outlined\"\r\n        label=\"Sort List\"\r\n        margin=\"normal\"\r\n        value={this.state.valueRange}\r\n        onChange={this.handleChange(\"valueRange\")}\r\n        InputProps={{\r\n          startAdornment: <InputAdornment position=\"start\">Type</InputAdornment>\r\n        }}\r\n      >\r\n        {values.map(option => (\r\n          <MenuItem key={option.value} value={option.value}>\r\n            {option.label}\r\n          </MenuItem>\r\n        ))}\r\n      </TextField>\r\n    );\r\n  }\r\n}\r\n// THCombobox.propTypes = {\r\n//   values: PropTypes.object.isRequired,\r\n// };\r\nexport default withStyles(styles)(THSort);\r\n"]},"metadata":{},"sourceType":"module"}