{"ast":null,"code":"import _defineProperty from \"E:\\\\WEB_RESOURCE\\\\ReactJS_TodoList\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"E:\\\\WEB_RESOURCE\\\\ReactJS_TodoList\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:\\\\WEB_RESOURCE\\\\ReactJS_TodoList\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"E:\\\\WEB_RESOURCE\\\\ReactJS_TodoList\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"E:\\\\WEB_RESOURCE\\\\ReactJS_TodoList\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"E:\\\\WEB_RESOURCE\\\\ReactJS_TodoList\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"E:\\\\WEB_RESOURCE\\\\ReactJS_TodoList\\\\src\\\\components\\\\THTable\\\\index.jsx\";\nimport React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { Button, Table, TableBody, TableCell, TableHead, TablePagination, Tooltip, Chip, IconButton, Checkbox, Paper, Typography, Toolbar, TableSortLabel, Grid, TableRow } from \"@material-ui/core\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\nvar counter = 0;\n\nfunction createData(name, calories, fat, carbs, protein) {\n  counter += 1;\n  return {\n    id: counter,\n    name: name,\n    calories: calories,\n    fat: fat,\n    carbs: carbs,\n    protein: protein\n  };\n}\n\nfunction desc(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n\n  return 0;\n}\n\nfunction stableSort(array, cmp) {\n  var stabilizedThis = array.map(function (el, index) {\n    return [el, index];\n  });\n  stabilizedThis.sort(function (a, b) {\n    var order = cmp(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map(function (el) {\n    return el[0];\n  });\n}\n\nfunction getSorting(order, orderBy) {\n  return order === \"desc\" ? function (a, b) {\n    return desc(a, b, orderBy);\n  } : function (a, b) {\n    return -desc(a, b, orderBy);\n  };\n}\n\nvar rows = [{\n  id: \"name\",\n  numeric: false,\n  disablePadding: true,\n  label: \"Task (Task Job)\"\n}, {\n  id: \"level\",\n  numeric: true,\n  disablePadding: false,\n  label: \"Level\"\n}, {\n  id: \"action\",\n  numeric: false,\n  disablePadding: false,\n  label: \"Action\" // { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\n  // { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\n  // { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" }\n\n}];\n\nvar EnhancedTableHead =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(EnhancedTableHead, _React$Component);\n\n  function EnhancedTableHead() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, EnhancedTableHead);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(EnhancedTableHead)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.createSortHandler = function (property) {\n      return function (event) {\n        _this.props.onRequestSort(event, property);\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(EnhancedTableHead, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          onSelectAllClick = _this$props.onSelectAllClick,\n          order = _this$props.order,\n          orderBy = _this$props.orderBy,\n          numSelected = _this$props.numSelected,\n          rowCount = _this$props.rowCount;\n      return React.createElement(TableHead, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(TableRow, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        padding: \"checkbox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Checkbox, {\n        indeterminate: numSelected > 0 && numSelected < rowCount,\n        checked: numSelected === rowCount,\n        onChange: onSelectAllClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      })), rows.map(function (row) {\n        return React.createElement(TableCell, {\n          key: row.id,\n          align: row.numeric ? \"right\" : \"left\",\n          padding: row.disablePadding ? \"none\" : \"default\",\n          sortDirection: orderBy === row.id ? order : false,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(Tooltip, {\n          title: \"Sort\",\n          placement: row.numeric ? \"bottom-end\" : \"bottom-start\",\n          enterDelay: 300,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(TableSortLabel, {\n          active: orderBy === row.id,\n          direction: order,\n          onClick: _this2.createSortHandler(row.id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, row.label)));\n      }, this)));\n    }\n  }]);\n\n  return EnhancedTableHead;\n}(React.Component);\n\nEnhancedTableHead.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.string.isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nvar toolbarStyles = function toolbarStyles(theme) {\n  return {\n    root: {\n      paddingRight: theme.spacing.unit\n    },\n    highlight: theme.palette.type === \"light\" ? {\n      color: theme.palette.secondary.main,\n      backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n    } : {\n      color: theme.palette.text.primary,\n      backgroundColor: theme.palette.secondary.dark\n    },\n    spacer: {\n      flex: \"1 1 100%\"\n    },\n    actions: {\n      color: theme.palette.text.secondary\n    },\n    title: {\n      flex: \"0 0 auto\"\n    }\n  };\n};\n\nvar EnhancedTableToolbar = function EnhancedTableToolbar(props) {\n  var numSelected = props.numSelected,\n      classes = props.classes;\n  return React.createElement(Toolbar, {\n    className: classNames(classes.root, _defineProperty({}, classes.highlight, numSelected > 0)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Typography, {\n    color: \"inherit\",\n    variant: \"subtitle1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173\n    },\n    __self: this\n  }, numSelected, \" selected\") : React.createElement(Typography, {\n    variant: \"h6\",\n    id: \"tableTitle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177\n    },\n    __self: this\n  }, \"Nutrition\")), React.createElement(\"div\", {\n    className: classes.spacer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.actions,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183\n    },\n    __self: this\n  }, numSelected > 0 ? React.createElement(Tooltip, {\n    title: \"Delete\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Delete\",\n    onClick: props.onHandleDeleteButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, React.createElement(DeleteIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190\n    },\n    __self: this\n  }))) : React.createElement(Tooltip, {\n    title: \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194\n    },\n    __self: this\n  }, React.createElement(IconButton, {\n    \"aria-label\": \"Filter list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195\n    },\n    __self: this\n  }, React.createElement(FilterListIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196\n    },\n    __self: this\n  })))));\n};\n\nEnhancedTableToolbar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired\n};\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\n\nvar styles = function styles(theme) {\n  return {\n    root: {\n      width: \"100%\",\n      marginTop: theme.spacing.unit * 3\n    },\n    table: {\n      minWidth: 1020\n    },\n    tableWrapper: {\n      overflowX: \"auto\"\n    }\n  };\n};\n\nvar THTable =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(THTable, _React$Component2);\n\n  function THTable() {\n    var _getPrototypeOf3;\n\n    var _this3;\n\n    _classCallCheck(this, THTable);\n\n    for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    _this3 = _possibleConstructorReturn(this, (_getPrototypeOf3 = _getPrototypeOf(THTable)).call.apply(_getPrototypeOf3, [this].concat(args)));\n    _this3.state = {\n      selected: [],\n      page: 0,\n      rowsPerPage: 5\n    };\n\n    _this3.handleRequestSort = function (event, property) {\n      var orderBy = property;\n      var order = \"desc\";\n\n      if (_this3.props.orderBy === property && _this3.props.order === \"desc\") {\n        order = \"asc\";\n      }\n\n      _this3.props.onHandleSort(orderBy, order);\n    };\n\n    _this3.handleSelectAllClick = function (event) {\n      if (event.target.checked) {\n        _this3.setState(function (state) {\n          return {\n            selected: _this3.props.listData.map(function (n) {\n              return n.id;\n            })\n          };\n        });\n\n        return;\n      }\n\n      _this3.setState({\n        selected: []\n      });\n    };\n\n    _this3.handleClick = function (event, id) {\n      var selected = _this3.state.selected;\n      var selectedIndex = selected.indexOf(id);\n      var newSelected = [];\n\n      if (selectedIndex === -1) {\n        newSelected = newSelected.concat(selected, id);\n      } else if (selectedIndex === 0) {\n        newSelected = newSelected.concat(selected.slice(1));\n      } else if (selectedIndex === selected.length - 1) {\n        newSelected = newSelected.concat(selected.slice(0, -1));\n      } else if (selectedIndex > 0) {\n        newSelected = newSelected.concat(selected.slice(0, selectedIndex), selected.slice(selectedIndex + 1));\n      }\n\n      _this3.setState({\n        selected: newSelected\n      });\n    };\n\n    _this3.handleChangePage = function (event, page) {\n      _this3.setState({\n        page: page\n      });\n    };\n\n    _this3.handleChangeRowsPerPage = function (event) {\n      _this3.setState({\n        rowsPerPage: event.target.value\n      });\n    };\n\n    _this3.isSelected = function (id) {\n      return _this3.state.selected.indexOf(id) !== -1;\n    };\n\n    _this3.handleDelete = function () {\n      //console.log('delete :: ',this.state.selected);\n      _this3.props.onHandleDelete(_this3.state.selected);\n    };\n\n    return _this3;\n  }\n\n  _createClass(THTable, [{\n    key: \"showElementLevel\",\n    value: function showElementLevel(level) {\n      var elmLevel = React.createElement(Chip, {\n        label: \"Small\",\n        color: \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 284\n        },\n        __self: this\n      });\n      if (level === 1) elmLevel = React.createElement(Chip, {\n        label: \"Medium\",\n        color: \"primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 285\n        },\n        __self: this\n      });else if (level === 2) elmLevel = React.createElement(Chip, {\n        label: \"High\",\n        color: \"secondary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 286\n        },\n        __self: this\n      });\n      return elmLevel;\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(newProps) {\n      if (newProps !== this.props) {\n        this.setState({\n          selected: newProps.selected\n        });\n      }\n\n      return true;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var _this$props2 = this.props,\n          classes = _this$props2.classes,\n          order = _this$props2.order,\n          orderBy = _this$props2.orderBy,\n          listData = _this$props2.listData;\n      var _this$state = this.state,\n          selected = _this$state.selected,\n          rowsPerPage = _this$state.rowsPerPage,\n          page = _this$state.page;\n      var emptyRows = rowsPerPage - Math.min(rowsPerPage, listData.length - page * rowsPerPage);\n      return React.createElement(Grid, {\n        item: true,\n        xs: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 310\n        },\n        __self: this\n      }, React.createElement(Paper, {\n        className: classes.root,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311\n        },\n        __self: this\n      }, React.createElement(EnhancedTableToolbar, {\n        numSelected: selected.length,\n        onHandleDeleteButton: this.handleDelete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 312\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: classes.tableWrapper,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316\n        },\n        __self: this\n      }, React.createElement(Table, {\n        className: classes.table,\n        \"aria-labelledby\": \"tableTitle\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317\n        },\n        __self: this\n      }, React.createElement(EnhancedTableHead, {\n        numSelected: selected.length,\n        order: order,\n        orderBy: orderBy,\n        onSelectAllClick: this.handleSelectAllClick,\n        onRequestSort: this.handleRequestSort,\n        rowCount: listData.length,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }), React.createElement(TableBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 326\n        },\n        __self: this\n      }, stableSort(listData, getSorting(order, orderBy)).slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (n) {\n        var isSelected = _this4.isSelected(n.id);\n\n        return React.createElement(TableRow, {\n          hover: true,\n          onClick: function onClick(event) {\n            return _this4.handleClick(event, n.id);\n          },\n          role: \"checkbox\",\n          \"aria-checked\": isSelected,\n          tabIndex: -1,\n          key: n.id,\n          selected: isSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 332\n          },\n          __self: this\n        }, React.createElement(TableCell, {\n          padding: \"checkbox\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341\n          },\n          __self: this\n        }, React.createElement(Checkbox, {\n          checked: isSelected,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 342\n          },\n          __self: this\n        })), React.createElement(TableCell, {\n          component: \"th\",\n          scope: \"row\",\n          padding: \"none\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }, n.name), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 347\n          },\n          __self: this\n        }, _this4.showElementLevel(n.level)), React.createElement(TableCell, {\n          align: \"right\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 350\n          },\n          __self: this\n        }, React.createElement(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.button,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 351\n          },\n          __self: this\n        }, \"Primary\")));\n      }), emptyRows > 0 && React.createElement(TableRow, {\n        style: {\n          height: 49 * emptyRows\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 363\n        },\n        __self: this\n      }, React.createElement(TableCell, {\n        colSpan: 4,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 364\n        },\n        __self: this\n      }))))), React.createElement(TablePagination, {\n        rowsPerPageOptions: [5, 10, 25],\n        component: \"div\",\n        count: listData.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        backIconButtonProps: {\n          \"aria-label\": \"Previous Page\"\n        },\n        nextIconButtonProps: {\n          \"aria-label\": \"Next Page\"\n        },\n        onChangePage: this.handleChangePage,\n        onChangeRowsPerPage: this.handleChangeRowsPerPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return THTable;\n}(React.Component);\n\nTHTable.propTypes = {\n  classes: PropTypes.object.isRequired\n};\nexport default withStyles(styles)(THTable);","map":{"version":3,"sources":["E:\\WEB_RESOURCE\\ReactJS_TodoList\\src\\components\\THTable\\index.jsx"],"names":["React","classNames","PropTypes","withStyles","Button","Table","TableBody","TableCell","TableHead","TablePagination","Tooltip","Chip","IconButton","Checkbox","Paper","Typography","Toolbar","TableSortLabel","Grid","TableRow","DeleteIcon","FilterListIcon","lighten","counter","createData","name","calories","fat","carbs","protein","id","desc","a","b","orderBy","stableSort","array","cmp","stabilizedThis","map","el","index","sort","order","getSorting","rows","numeric","disablePadding","label","EnhancedTableHead","createSortHandler","property","event","props","onRequestSort","onSelectAllClick","numSelected","rowCount","row","Component","propTypes","number","isRequired","func","string","toolbarStyles","theme","root","paddingRight","spacing","unit","highlight","palette","type","color","secondary","main","backgroundColor","light","text","primary","dark","spacer","flex","actions","title","EnhancedTableToolbar","classes","onHandleDeleteButton","object","styles","width","marginTop","table","minWidth","tableWrapper","overflowX","THTable","state","selected","page","rowsPerPage","handleRequestSort","onHandleSort","handleSelectAllClick","target","checked","setState","listData","n","handleClick","selectedIndex","indexOf","newSelected","concat","slice","length","handleChangePage","handleChangeRowsPerPage","value","isSelected","handleDelete","onHandleDelete","level","elmLevel","newProps","emptyRows","Math","min","showElementLevel","button","height"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport classNames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport {\r\n  Button,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableHead,\r\n  TablePagination,\r\n  Tooltip,\r\n  Chip,\r\n  IconButton,\r\n  Checkbox,\r\n  Paper,\r\n  Typography,\r\n  Toolbar,\r\n  TableSortLabel,\r\n  Grid,\r\n  TableRow\r\n} from \"@material-ui/core\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\r\nimport { lighten } from \"@material-ui/core/styles/colorManipulator\";\r\n\r\nlet counter = 0;\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  counter += 1;\r\n  return { id: counter, name, calories, fat, carbs, protein };\r\n}\r\n\r\nfunction desc(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction stableSort(array, cmp) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = cmp(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map(el => el[0]);\r\n}\r\n\r\nfunction getSorting(order, orderBy) {\r\n  return order === \"desc\"\r\n    ? (a, b) => desc(a, b, orderBy)\r\n    : (a, b) => -desc(a, b, orderBy);\r\n}\r\n\r\nconst rows = [\r\n  {\r\n    id: \"name\",\r\n    numeric: false,\r\n    disablePadding: true,\r\n    label: \"Task (Task Job)\"\r\n  },\r\n  { id: \"level\", numeric: true, disablePadding: false, label: \"Level\" },\r\n  { id: \"action\", numeric: false, disablePadding: false, label: \"Action\" }\r\n  // { id: \"fat\", numeric: true, disablePadding: false, label: \"Fat (g)\" },\r\n  // { id: \"carbs\", numeric: true, disablePadding: false, label: \"Carbs (g)\" },\r\n  // { id: \"protein\", numeric: true, disablePadding: false, label: \"Protein (g)\" }\r\n];\r\n\r\nclass EnhancedTableHead extends React.Component {\r\n  createSortHandler = property => event => {\r\n    this.props.onRequestSort(event, property);\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      onSelectAllClick,\r\n      order,\r\n      orderBy,\r\n      numSelected,\r\n      rowCount\r\n    } = this.props;\r\n\r\n    return (\r\n      <TableHead>\r\n        <TableRow>\r\n          <TableCell padding=\"checkbox\">\r\n            <Checkbox\r\n              indeterminate={numSelected > 0 && numSelected < rowCount}\r\n              checked={numSelected === rowCount}\r\n              onChange={onSelectAllClick}\r\n            />\r\n          </TableCell>\r\n          {rows.map(\r\n            row => (\r\n              <TableCell\r\n                key={row.id}\r\n                align={row.numeric ? \"right\" : \"left\"}\r\n                padding={row.disablePadding ? \"none\" : \"default\"}\r\n                sortDirection={orderBy === row.id ? order : false}\r\n              >\r\n                <Tooltip\r\n                  title=\"Sort\"\r\n                  placement={row.numeric ? \"bottom-end\" : \"bottom-start\"}\r\n                  enterDelay={300}\r\n                >\r\n                  <TableSortLabel\r\n                    active={orderBy === row.id}\r\n                    direction={order}\r\n                    onClick={this.createSortHandler(row.id)}\r\n                  >\r\n                    {row.label}\r\n                  </TableSortLabel>\r\n                </Tooltip>\r\n              </TableCell>\r\n            ),\r\n            this\r\n          )}\r\n        </TableRow>\r\n      </TableHead>\r\n    );\r\n  }\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.string.isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired\r\n};\r\n\r\nconst toolbarStyles = theme => ({\r\n  root: {\r\n    paddingRight: theme.spacing.unit\r\n  },\r\n  highlight:\r\n    theme.palette.type === \"light\"\r\n      ? {\r\n          color: theme.palette.secondary.main,\r\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark\r\n        },\r\n  spacer: {\r\n    flex: \"1 1 100%\"\r\n  },\r\n  actions: {\r\n    color: theme.palette.text.secondary\r\n  },\r\n  title: {\r\n    flex: \"0 0 auto\"\r\n  }\r\n});\r\n\r\nlet EnhancedTableToolbar = props => {\r\n  const { numSelected, classes } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={classNames(classes.root, {\r\n        [classes.highlight]: numSelected > 0\r\n      })}\r\n    >\r\n      <div className={classes.title}>\r\n        {numSelected > 0 ? (\r\n          <Typography color=\"inherit\" variant=\"subtitle1\">\r\n            {numSelected} selected\r\n          </Typography>\r\n        ) : (\r\n          <Typography variant=\"h6\" id=\"tableTitle\">\r\n            Nutrition\r\n          </Typography>\r\n        )}\r\n      </div>\r\n      <div className={classes.spacer} />\r\n      <div className={classes.actions}>\r\n        {numSelected > 0 ? (\r\n          <Tooltip title=\"Delete\">\r\n            <IconButton\r\n              aria-label=\"Delete\"\r\n              onClick={props.onHandleDeleteButton}\r\n            >\r\n              <DeleteIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        ) : (\r\n          <Tooltip title=\"Filter list\">\r\n            <IconButton aria-label=\"Filter list\">\r\n              <FilterListIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        )}\r\n      </div>\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired\r\n};\r\n\r\nEnhancedTableToolbar = withStyles(toolbarStyles)(EnhancedTableToolbar);\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    width: \"100%\",\r\n    marginTop: theme.spacing.unit * 3\r\n  },\r\n  table: {\r\n    minWidth: 1020\r\n  },\r\n  tableWrapper: {\r\n    overflowX: \"auto\"\r\n  }\r\n});\r\n\r\nclass THTable extends React.Component {\r\n  state = {\r\n    selected: [],\r\n    page: 0,\r\n    rowsPerPage: 5\r\n  };\r\n\r\n  handleRequestSort = (event, property) => {\r\n    const orderBy = property;\r\n    let order = \"desc\";\r\n\r\n    if (this.props.orderBy === property && this.props.order === \"desc\") {\r\n      order = \"asc\";\r\n    }\r\n\r\n    this.props.onHandleSort(orderBy, order);\r\n  };\r\n\r\n  handleSelectAllClick = event => {\r\n    if (event.target.checked) {\r\n      this.setState(state => ({\r\n        selected: this.props.listData.map(n => n.id)\r\n      }));\r\n      return;\r\n    }\r\n    this.setState({ selected: [] });\r\n  };\r\n\r\n  handleClick = (event, id) => {\r\n    const { selected } = this.state;\r\n    const selectedIndex = selected.indexOf(id);\r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, id);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1)\r\n      );\r\n    }\r\n    this.setState({ selected: newSelected });\r\n  };\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  };\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  };\r\n\r\n  isSelected = id => this.state.selected.indexOf(id) !== -1;\r\n\r\n  showElementLevel(level) {\r\n    let elmLevel = <Chip label=\"Small\" color=\"default\" />;\r\n    if (level === 1) elmLevel = <Chip label=\"Medium\" color=\"primary\" />;\r\n    else if (level === 2) elmLevel = <Chip label=\"High\" color=\"secondary\" />;\r\n\r\n    return elmLevel;\r\n  }\r\n\r\n  handleDelete = () => {\r\n    //console.log('delete :: ',this.state.selected);\r\n    this.props.onHandleDelete(this.state.selected);\r\n  };\r\n\r\n  componentWillReceiveProps(newProps) {\r\n    if (newProps !== this.props) {\r\n      this.setState({ selected: newProps.selected });\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const { classes, order, orderBy, listData } = this.props;\r\n    const { selected, rowsPerPage, page } = this.state;\r\n    const emptyRows =\r\n      rowsPerPage - Math.min(rowsPerPage, listData.length - page * rowsPerPage);\r\n\r\n    return (\r\n      <Grid item xs={12}>\r\n        <Paper className={classes.root}>\r\n          <EnhancedTableToolbar\r\n            numSelected={selected.length}\r\n            onHandleDeleteButton={this.handleDelete}\r\n          />\r\n          <div className={classes.tableWrapper}>\r\n            <Table className={classes.table} aria-labelledby=\"tableTitle\">\r\n              <EnhancedTableHead\r\n                numSelected={selected.length}\r\n                order={order}\r\n                orderBy={orderBy}\r\n                onSelectAllClick={this.handleSelectAllClick}\r\n                onRequestSort={this.handleRequestSort}\r\n                rowCount={listData.length}\r\n              />\r\n              <TableBody>\r\n                {stableSort(listData, getSorting(order, orderBy))\r\n                  .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                  .map(n => {\r\n                    const isSelected = this.isSelected(n.id);\r\n                    return (\r\n                      <TableRow\r\n                        hover\r\n                        onClick={event => this.handleClick(event, n.id)}\r\n                        role=\"checkbox\"\r\n                        aria-checked={isSelected}\r\n                        tabIndex={-1}\r\n                        key={n.id}\r\n                        selected={isSelected}\r\n                      >\r\n                        <TableCell padding=\"checkbox\">\r\n                          <Checkbox checked={isSelected} />\r\n                        </TableCell>\r\n                        <TableCell component=\"th\" scope=\"row\" padding=\"none\">\r\n                          {n.name}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          {this.showElementLevel(n.level)}\r\n                        </TableCell>\r\n                        <TableCell align=\"right\">\r\n                          <Button\r\n                            variant=\"contained\"\r\n                            color=\"primary\"\r\n                            className={classes.button}\r\n                          >\r\n                            Primary\r\n                          </Button>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                {emptyRows > 0 && (\r\n                  <TableRow style={{ height: 49 * emptyRows }}>\r\n                    <TableCell colSpan={4} />\r\n                  </TableRow>\r\n                )}\r\n              </TableBody>\r\n            </Table>\r\n          </div>\r\n          <TablePagination\r\n            rowsPerPageOptions={[5, 10, 25]}\r\n            component=\"div\"\r\n            count={listData.length}\r\n            rowsPerPage={rowsPerPage}\r\n            page={page}\r\n            backIconButtonProps={{\r\n              \"aria-label\": \"Previous Page\"\r\n            }}\r\n            nextIconButtonProps={{\r\n              \"aria-label\": \"Next Page\"\r\n            }}\r\n            onChangePage={this.handleChangePage}\r\n            onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n          />\r\n        </Paper>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nTHTable.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(THTable);\r\n"]},"metadata":{},"sourceType":"module"}